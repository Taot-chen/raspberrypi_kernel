# 0 "arch/arm64/boot/dts/overlays/imx500-pi5-overlay.dts"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "arch/arm64/boot/dts/overlays/imx500-pi5-overlay.dts"


/dts-v1/;
/plugin/;

# 1 "./scripts/dtc/include-prefixes/dt-bindings/gpio/gpio.h" 1
# 7 "arch/arm64/boot/dts/overlays/imx500-pi5-overlay.dts" 2

/{
 compatible = "brcm,bcm2712";

 fragment@0 {
  target = <&i2c0if>;
  __overlay__ {
   status = "okay";
  };
 };

 fragment@1 {
  target = <&i2c0mux>;
  __overlay__ {
   status = "okay";
  };
 };

 reg_frag: fragment@2 {
  target = <&cam1_reg>;
  cam_reg: __overlay__ {
   startup-delay-us = <300000>;
  };
 };

 i2c_frag: fragment@100 {
  target = <&i2c_csi_dsi>;
  __overlay__ {
   #address-cells = <1>;
   #size-cells = <0>;
   status = "okay";

# 1 "arch/arm64/boot/dts/overlays/imx500.dtsi" 1

cam_node: imx500@1a {
 reg = <0x1a>;
 compatible = "sony,imx500";
 status = "disabled";

 clocks = <&cam1_clk>;
 clock-names = "inck";

 vana-supply = <&cam1_reg>;
 vdig-supply = <&cam_dummy_reg>;
 vif-supply = <&cam_dummy_reg>;

 reset-gpios = <&gpio 255 0>;

 rotation = <0>;
 orientation = <2>;

 port {
  cam_endpoint: endpoint {
   clock-lanes = <0>;
   data-lanes = <1 2>;
   clock-noncontinuous;
   link-frequencies =
    /bits/ 64 <444000000>;
  };
 };
};
# 40 "arch/arm64/boot/dts/overlays/imx500-pi5-overlay.dts" 2
# 1 "arch/arm64/boot/dts/overlays/rpi-rp2040-gpio-bridge.dtsi" 1

spi_bridge: spi@40 {
 reg = <0x40>;
 compatible = "raspberrypi,rp2040-gpio-bridge";
 status = "disabled";
 #address-cells = <1>;
 #size-cells = <0>;

 power-supply = <&cam1_reg>;

 #gpio-cells = <2>;
 gpio-controller;

 spi_bridgedev0: spidev@0{
  compatible = "spidev";
  reg = <0>;
  #address-cells = <1>;
  #size-cells = <0>;
  spi-max-frequency = <35000000>;
 };
};
# 41 "arch/arm64/boot/dts/overlays/imx500-pi5-overlay.dts" 2
  };
 };

 csi_frag: fragment@101 {
  target = <&csi1>;
  csi: __overlay__ {
   status = "okay";
   brcm,media-controller;

   port {
    csi_ep: endpoint {
     remote-endpoint = <&cam_endpoint>;
     clock-lanes = <0>;
     data-lanes = <1 2>;
     clock-noncontinuous;
    };
   };
  };
 };

 spi_frag: fragment@102 {
  target = <&spi_bridge>;
  spi_frag_overlay: __overlay__ {
   fast_xfer_requires_i2c_lock = <1>;
   fast_xfer_recv_gpio_base = <11>;
   fast_xfer-gpios = <&rp1_gpio 40 0>,
       <&rp1_gpio 48 0>;
  };
 };

 spi_bridge_frag: fragment@103 {
  target = <&spi_bridgedev0>;
  __overlay__ {
   compatible = "sony,imx500";
  };
 };

 fragment@104 {
  target-path = "/clocks";
  __overlay__ {
   clk_aicam: clk-aicam1 {
    compatible = "fixed-clock";
    #clock-cells = <0>;
    clock-frequency = <24000000>;
   };

   clk_aicam_gated: clk-aicam-gated1 {
    compatible = "gpio-gate-clock";
    clocks = <&clk_aicam>;
    #clock-cells = <0>;
    enable-gpios = <&spi_bridge 21 0>;
   };
  };
 };

 __overrides__ {
  rotation = <&cam_node>,"rotation:0";
  orientation = <&cam_node>,"orientation:0";
  media-controller = <&csi>,"brcm,media-controller?";
  cam0 = <&i2c_frag>, "target:0=",<&i2c_csi_dsi0>,
         <&csi_frag>, "target:0=",<&csi0>,
      <&spi_frag_overlay>, "fast_xfer-gpios:4=38",
      <&spi_frag_overlay>, "fast_xfer-gpios:16=35",
      <&spi_bridge>, "power-supply:0=",<&cam0_reg>,
         <&reg_frag>, "target:0=",<&cam0_reg>,
         <&cam_node>, "VANA-supply:0=",<&cam0_reg>,
         <&clk_aicam>,"name=clk-aicam0",
         <&clk_aicam_gated>,"name=clk-aicam-gated0";
  bypass-cache = <&spi_bridge>,"bypass-cache?";
 };
};

&cam_node {
 status = "okay";
 led-gpios = <&spi_bridge 19 0>;
 reset-gpios = <&spi_bridge 20 0>;
 clocks = <&clk_aicam_gated>;
 spi = <&spi_bridgedev0>;
};

&spi_bridge {
 status = "okay";
};

&cam_endpoint {
 remote-endpoint = <&csi_ep>;
};
